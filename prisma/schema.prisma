// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Team {
  id  String @id @default(uuid())
  name String
  logo String
  @@map("teams")
  
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  player Player[]
}

model Player {
  id  String @id @default(uuid())
  nickName String @map("nick_name")
  role String
  photo String
  nationality String
  
  
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  teamId String @map("team_id")
  team Team @relation(fields: [teamId], references: [id])
  rates Rate[] 

  @@map("players")
  
}

model Stage {
  id  String @id @default(uuid())
  slug String
  stageInitDate DateTime @map("stage_init_date")
  stageEndDate DateTime @map("stage_end_date")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  rates Rate[] 
  @@map("stages")
}

model Rate {
  id  String @id @default(uuid())
  rate Int
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  stageId String @map("stage_id")
  stage Stage @relation(fields: [stageId], references: [id])
  
  player Player @relation(fields: [playerId], references: [id])
  playerId String @map("player_id")
  @@map("rates")
}
